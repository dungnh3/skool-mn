// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/parents/register": {
            "post": {
                "description": "register a new schedule pick up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registers"
                ],
                "summary": "register a new schedule pick up",
                "parameters": [
                    {
                        "description": "register a new schedule",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.RegisterPickUpTime"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Register"
                        }
                    }
                }
            }
        },
        "/parents/registers/:id/cancel": {
            "put": {
                "description": "confirm that parents want to cancel register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registers"
                ],
                "summary": "confirm that parents want to cancel register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "register_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Register"
                        }
                    }
                }
            }
        },
        "/parents/registers/:id/confirm": {
            "put": {
                "description": "confirm that parents have completed",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registers"
                ],
                "summary": "confirm that parents have completed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "register_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Register"
                        }
                    }
                }
            }
        },
        "/parents/registers/:id/waiting": {
            "put": {
                "description": "confirm that parents is ready for pik up",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Registers"
                ],
                "summary": "confirm that parents is ready for pik up",
                "parameters": [
                    {
                        "type": "string",
                        "description": "register_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Register"
                        }
                    }
                }
            }
        },
        "/parents/{id}/students": {
            "get": {
                "description": "list all students of parent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parents"
                ],
                "summary": "list all students of parent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "parent_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    }
                }
            }
        },
        "/students/:id/leave": {
            "put": {
                "description": "confirm that this teacher want to reject the register schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "confirm that this student left this class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/students/:id/out": {
            "put": {
                "description": "confirm that this student left this school",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "confirm that this student left this school",
                "parameters": [
                    {
                        "type": "string",
                        "description": "student_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/teachers/registers/:id/confirm": {
            "put": {
                "description": "confirm that their student has left the class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "confirm that their student has left the class",
                "parameters": [
                    {
                        "type": "string",
                        "description": "register_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Register"
                        }
                    }
                }
            }
        },
        "/teachers/registers/:id/reject": {
            "put": {
                "description": "confirm that this teacher want to reject the register schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "confirm that this teacher want to reject the register schedule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "register_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Register"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Account": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_no": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/store.ObjectStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Register": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "register_time": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/store.RegisterStatus"
                },
                "student_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "services.RegisterPickUpTime": {
            "type": "object",
            "required": [
                "parent_id",
                "register_time",
                "student_ids"
            ],
            "properties": {
                "parent_id": {
                    "type": "string"
                },
                "register_time": {
                    "type": "string"
                },
                "student_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "store.ObjectStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive"
            ],
            "x-enum-varnames": [
                "Active",
                "InActive"
            ]
        },
        "store.RegisterStatus": {
            "type": "string",
            "enum": [
                "registered",
                "confirmed",
                "cancelled",
                "rejected",
                "done",
                "waiting",
                "student_left_class",
                "student_out_school"
            ],
            "x-enum-varnames": [
                "Registered",
                "Confirmed",
                "Cancelled",
                "Rejected",
                "Done",
                "Waiting",
                "StudentLeftClass",
                "StudentOutSchool"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
